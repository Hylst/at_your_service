import { useState, useEffect } from "react";
import { useNavigate, useSearchParams } from "react-router-dom";
import { SidebarProvider, SidebarInset, SidebarTrigger } from "@/components/ui/sidebar";
import { AppSidebar } from "@/components/AppSidebar";
import { UserProfile } from "@/components/UserProfile";
import UnitConverter from "@/components/tools/UnitConverter";
import { CalculatorImproved } from "@/components/tools/CalculatorImproved";
import { TodoListEnhanced } from "@/components/tools/TodoListEnhanced";
import { ColorGenerator } from "@/components/tools/ColorGenerator";
import { BMICalculator } from "@/components/tools/BMICalculator";
import { TextUtilsAdvanced } from "@/components/tools/TextUtilsAdvanced";
import DateCalculatorAdvanced from "@/components/tools/DateCalculatorAdvanced";
import { ProductivitySuiteModular } from "@/components/tools/ProductivitySuiteModular";
import { PasswordGeneratorUnified } from "@/components/tools/PasswordGeneratorUnified";
import { QRCodeGenerator } from "@/components/tools/QRCodeGenerator";
import { HealthWellnessSuite } from "@/components/tools/HealthWellnessSuite";
import { CareerProductivity } from "@/components/tools/CareerProductivity";
import { About } from "@/components/About";
import { UniversalDataManager } from "@/components/tools/common/UniversalDataManager";
import { AppSettings } from "@/components/tools/common/AppSettings";
import { useAuth } from "@/contexts/AuthContext";
import { Button } from "@/components/ui/button";
import { UserMenu } from "@/components/UserMenu";
import { ThemeToggle } from "@/components/ThemeToggle";
import { Header } from "@/components/Header";

// New design system components
import { Container } from "@/components/ui/container";
import { Section } from "@/components/ui/section";
import { Grid } from "@/components/ui/grid";
import { Heading } from "@/components/ui/heading";
import { Text } from "@/components/ui/text";
import { ToolCard } from "@/components/ui/tool-card";

const Index = () => {
  const [activeSection, setActiveSection] = useState("home");
  const [searchParams] = useSearchParams();
  const { user, loading } = useAuth();
  const navigate = useNavigate();

  // G√©rer la navigation via URL params (depuis Settings)
  useEffect(() => {
    const section = searchParams.get('section');
    if (section) {
      setActiveSection(section);
      // Nettoyer l'URL apr√®s avoir mis √† jour l'√©tat
      navigate('/', { replace: true });
    }
  }, [searchParams, navigate]);

  const getSectionTitle = () => {
    switch (activeSection) {
      case "unit-converter": return "Convertisseurs d'Unit√©s";
      case "calculator": return "Calculatrices";
      case "date-calculator-advanced": return "Dates & Temps Avanc√©s";
      case "career-productivity": return "Carri√®re & Productivit√© Pro";
      case "productivity-suite": return "Suite Productivit√©";
      case "password-generator-advanced": return "G√©n√©rateur de Mots de Passe";
      case "color-generator": return "G√©n√©rateur de Couleurs";
      case "bmi-calculator": return "Calculateur IMC";
      case "health-wellness-suite": return "Suite Sant√© & Bien-√™tre";
      case "text-utils-advanced": return "Utilitaires Texte Avanc√©s";
      case "data-manager": return "Gestionnaire de Donn√©es";
      case "settings": return "Param√®tres";
      case "profile": return "Mon Profil";
      case "about": return "√Ä propos";
      default: return "√Ä Votre Service";
    }
  };

  const handleProfileClick = () => {
    setActiveSection("profile");
  };

  const renderContent = () => {
    switch (activeSection) {
      case "unit-converter":
        return <UnitConverter />;
      case "calculator":
        return <CalculatorImproved />;
      case "date-calculator-advanced":
        return <DateCalculatorAdvanced />;
      case "career-productivity":
        return <CareerProductivity />;
      case "productivity-suite":
        return <ProductivitySuiteModular />;
      case "password-generator-advanced":
        return <PasswordGeneratorUnified />;
      case "color-generator":
        return <ColorGenerator />;
      case "bmi-calculator":
        return <BMICalculator />;
      case "health-wellness-suite":
        return <HealthWellnessSuite />;
      case "text-utils-advanced":
        return <TextUtilsAdvanced />;
      case "data-manager":
        return <UniversalDataManager />;
      case "settings":
        return (
          <div className="max-w-2xl mx-auto">
            <AppSettings />
          </div>
        );
      case "profile":
        return <UserProfile />;
      case "about":
        return <About />;
      default:
        return (
          <div className="space-y-0">
            {/* Hero Section */}
            <Section spacing="xl">
              <Container>
                <div className="flex flex-col lg:flex-row items-center gap-8 mb-8">
                  {/* Butler Image */}
                  <div className="lg:w-1/2 flex justify-center">
                    <img 
                      src="/images/majordome-hero.png" 
                      alt="Majordome √Ä Votre Service"
                      className="w-full max-w-md mx-auto lg:max-w-lg"
                    />
                  </div>
                  
                  {/* Text Content */}
                  <div className="lg:w-1/2 text-center lg:text-left">
                    <Heading level={1} gradient className="mb-6">
                      √Ä Votre Service
                    </Heading>
                    <Text size="xl" color="muted" className="mb-8">
                      Votre majordome num√©rique personnel. Une collection d'outils 
                      professionnels pour optimiser votre quotidien.
                    </Text>
                    
                    {!loading && !user && (
                      <div className="flex flex-col sm:flex-row justify-center lg:justify-start gap-4">
                        <Button 
                          onClick={() => navigate('/auth')}
                          className="bg-gradient-to-r from-blue-600 to-teal-600 w-full sm:w-auto"
                          size="lg"
                        >
                          Se connecter
                        </Button>
                        <Button 
                          variant="outline"
                          onClick={() => navigate('/auth')}
                          className="w-full sm:w-auto"
                          size="lg"
                        >
                          Cr√©er un compte
                        </Button>
                      </div>
                    )}
                  </div>
                </div>
              </Container>
            </Section>
            
            {/* Tools Grid */}
            <Section spacing="lg">
              <Container>
                <Heading level={2} size="2xl" className="text-center mb-8">
                  Outils Disponibles
                </Heading>
                
                <Grid variant="responsive" gap="lg">
                  <ToolCard
                    title="Convertisseurs Universels"
                    description="12 types d'unit√©s : longueurs, poids, temp√©ratures, devises..."
                    icon="‚öñÔ∏è"
                    tools={["12 Types d'unit√©s", "Temps r√©el", "Notes explicatives", "Standards SI", "D√©bounce optimis√©"]}
                    onClick={() => setActiveSection("unit-converter")}
                  />
                  
                  <ToolCard
                    title="Calculatrices"
                    description="Scientifique avec saisie clavier"
                    icon="üßÆ"
                    tools={["Scientifique", "Clavier", "M√©moire", "Historique"]}
                    onClick={() => setActiveSection("calculator")}
                  />
                  
                  <ToolCard
                    title="Dates & Temps Avanc√©s"
                    description="Calculateurs complets de dates"
                    icon="üìÖ"
                    tools={["Diff√©rences", "Ajout/Soustraction", "√Çge", "Planning", "Fuseaux horaires"]}
                    onClick={() => setActiveSection("date-calculator-advanced")}
                  />
                  
                  <ToolCard
                    title="Carri√®re & Productivit√© Pro"
                    description="Outils professionnels pour d√©velopper votre carri√®re"
                    icon="üíº"
                    tools={["Coach Pro", "Orientation", "Entretiens", "Assistant R√©dac", "CV Builder", "Networking"]}
                    onClick={() => setActiveSection("career-productivity")}
                    variant="highlighted"
                  />
                  
                  <ToolCard
                    title="Suite Productivit√© Compl√®te"
                    description="T√¢ches avanc√©es, notes, Pomodoro et to-do list int√©gr√©s"
                    icon="üöÄ"
                    tools={["T√¢ches intelligentes", "To-do list am√©lior√©e", "Notes avec tags", "Pomodoro", "Statistiques", "Synchronisation"]}
                    onClick={() => setActiveSection("productivity-suite")}
                  />
                  
                  <ToolCard
                    title="S√©curit√© Avanc√©e"
                    description="G√©n√©rateur de mots de passe s√©curis√©s avec analyse"
                    icon="üîê"
                    tools={["Templates s√©curis√©s", "Analyse de force", "Historique", "Export/Import", "Chiffrement"]}
                    onClick={() => setActiveSection("password-generator-advanced")}
                  />
                  
                  <ToolCard
                    title="Cr√©ativit√©"
                    description="G√©n√©rateurs et outils cr√©atifs"
                    icon="üé®"
                    tools={["Couleurs", "Palettes", "Design", "Inspiration"]}
                    onClick={() => setActiveSection("color-generator")}
                  />
                  
                  <ToolCard
                    title="Sant√© & Bien-√™tre"
                    description="Suite compl√®te : IMC, nutrition, sommeil, exercices..."
                    icon="üí™"
                    tools={["IMC Avanc√©", "Nutrition", "Hydratation", "Sommeil", "Exercices", "Mental", "M√©dicaments", "M√©triques", "Poids", "Objectifs"]}
                    onClick={() => setActiveSection("health-wellness-suite")}
                  />
                  
                  <ToolCard
                    title="Utilitaires Texte Avanc√©s"
                    description="Analyse, formatage, transformation et outils avanc√©s"
                    icon="üìù"
                    tools={["Compteur avanc√©", "Formatage", "Analyse sentiment", "Transformation", "SEO", "Markdown", "Colorisation", "Emojis"]}
                    onClick={() => setActiveSection("text-utils-advanced")}
                  />

                  <ToolCard
                    title="Gestionnaire de Donn√©es"
                    description="G√©rez, exportez et importez toutes vos donn√©es en un seul endroit"
                    icon="üóÉÔ∏è"
                    tools={["Export universel", "Import/Export", "Statistiques", "Performance", "Tests int√©gr√©s"]}
                    onClick={() => setActiveSection("data-manager")}
                  />
                  
                  <ToolCard
                    title="√Ä propos"
                    description="Informations sur l'application"
                    icon="‚ÑπÔ∏è"
                    tools={["Auteur", "Technologies", "Version", "Licence"]}
                    onClick={() => setActiveSection("about")}
                  />
                </Grid>
              </Container>
            </Section>
          </div>
        );
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <Text color="muted">Chargement...</Text>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 dark:from-gray-900 dark:to-gray-800">
      <SidebarProvider>
        <div className="min-h-screen flex w-full">
          <AppSidebar activeSection={activeSection} setActiveSection={setActiveSection} />
          
          <SidebarInset>
            {/* Header */}
            <Header 
              onMenuClick={() => {}} 
              activeSection={activeSection} 
              setActiveSection={setActiveSection} 
            />
            
            {/* Main Content */}
            <main className="flex-1">
              <Container className="pt-0.5 pb-6 lg:pb-8">
                {renderContent()}
              </Container>
            </main>
          </SidebarInset>
        </div>
      </SidebarProvider>
    </div>
  );
};

export default Index;
